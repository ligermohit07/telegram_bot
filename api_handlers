from telegram import Update, ParseMode
from telegram.ext import CallbackContext
from utils.db_utils import get_collection

api_collection = get_collection("apis")

def add_api(update: Update, context: CallbackContext):
    args = context.args
    if not args:
        update.message.reply_text("⚠️ Please provide an API key.", parse_mode=ParseMode.HTML)
        return
    api_key = args[0]
    api_collection.insert_one({"api_key": api_key, "usage": 0})
    update.message.reply_text("<b>✅ API key has been added successfully!</b>", parse_mode=ParseMode.HTML)

def api_list(update: Update, context: CallbackContext):
    apis = api_collection.find()
    msg = " <b>API List:</b>\n"
    for api in apis:
        remaining = 1000 - api["usage"] # Assuming a limit of 1000
        msg += f" Key: <code>{api['api_key']}</code>\n  Used: <code>{api['usage']}</code>\n  Remaining: <code>{remaining}</code>\n"
    update.message.reply_text(msg, parse_mode=ParseMode.HTML)

def remove_api(update: Update, context: CallbackContext):
    args = context.args
    if not args:
        update.message.reply_text("⚠️ Please provide an API key to remove.", parse_mode=ParseMode.HTML)
        return
    api_key = args[0]
    api_collection.delete_one({"api_key": api_key})
    update.message.reply_text("<b>️ API key has been removed.</b>", parse_mode=ParseMode.HTML)
